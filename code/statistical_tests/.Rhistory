group2_ids <- ids[c(73:100)]
length(group2_ids)
table(rank_corr_long[group1_ids]$absolute_error_class)
table(rank_corr_long %>% filter(id %in% group1_ids) %>% select(absolute_error_class))
table(rank_corr_long %>% filter(id %in% group2_ids) %>% select(absolute_error_class))
length(rank_corr_long$id)
help(geom_vline)
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
group1_ids <- ids[c(1:72)]
group2_ids <- ids[c(72:100)]
X_1 <- rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(absolute_error_class)
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(absolute_error_class)
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
print(length(ids))
group1_ids <- ids[c(1:72)]
group2_ids <- ids[c(72:100)]
X_1 <- rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(rank_corr)
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
print(ids)
group1_ids <- ids[c(1:72)]
group2_ids <- ids[c(72:100)]
X_1 <- rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(rank_corr)
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
ids
length(ids)
ids[c(1:72),]
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
group1_ids <- ids[c(1:72),]
group2_ids <- ids[c(72:100),]
X_1 <- rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(rank_corr)
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
group1_ids <- ids[c(1:72),]
group2_ids <- ids[c(72:100),]
X_1 <- rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(rank_corr)
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
X_2
is.numeric(X_2)
is.numeric(as.list(X_2))
as.list(X_2)
as.list(X_2)$rank_corr
X_2 <- rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr) %>% deframe()
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
ids <- sample(
rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(id)
)
group1_ids <- ids[c(1:72),]
group2_ids <- ids[c(72:100),]
X_1 <- as.list(
rank_corr_long %>%
filter(id %in% group1_ids) %>%
select(rank_corr)
)$rank_corr
X_2 <- as.list(
rank_corr_long %>%
filter(id %in% group2_ids) %>%
select(rank_corr)
)$rank_corr
wmw_result <- wilcox.test(X_1, X_2)
return(wmw_result$statistic)
})
help(wilcoxon.test)
help(wilcox.test)
help("rbinom")
rbinom(100, 1)
rbinom(100, 1, 0.72)
sum(rbinom(100, 1, 0.72))
sum(rbinom(100, 1, 0.72))
help(rep)
rep(0:1, c(28, 72))
sum(rep(0:1, c(28, 72)))
length(rep(0:1, c(28, 72)))
sample(rep(0:1, c(28, 72)))
rank_corr_long %>% mutate(group = sample(rep(0:1, c(28, 72))))
rank_corr_long %>% filter(attribution_method == "SME_rank_corr") %>% mutate(group = sample(rep(0:1, c(28, 72))))
W_obs <- wmw_sme$statistic
W_star <- replicate(1e4, {
permuted_data <- rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
mutate(group = sample(rep(0:1, c(28, 72))))
wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
return(wmw_result$statistic)
})
critical_values <- quantile(W_star, prob = 0.05 / 7)
ggplot(mapping = aes(x = W_star)) +
geom_histogram() +
geom_vline(xintercept = W_obs, col = "red") +
geom_vline(xintercept = critical_values, col = "blue")
critical_values
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = (0.05 / 7 / 2, 1 - 0.05 / 7 / 2)
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = c(0.05 / 7 / 2, 1 - 0.05 / 7 / 2)
ggplot(mapping = aes(x = W_star)) +
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = c(0.05 / 7 / 2, 1 - 0.05 / 7 / 2)
ggplot(mapping = aes(x = W_star)) +
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = c(0.05 / 7 / 2, 1 - 0.05 / 7 / 2))
ggplot(mapping = aes(x = W_star)) +
geom_histogram(bins = 50) +
geom_vline(xintercept = W_obs, col = "red") +
geom_vline(xintercept = critical_values, col = "blue")
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = c(0.05 / 7 / 2, 1 - 0.05 / 7 / 2))
ggplot(mapping = aes(x = W_star)) +
geom_histogram(bins = 100) +
geom_vline(xintercept = W_obs, col = "red") +
geom_vline(xintercept = critical_values, col = "blue")
# W_obs <- wmw_sme$statistic
#
# W_star <- replicate(1e4, {
#   permuted_data <- rank_corr_long %>%
#     filter(attribution_method == "SME_rank_corr") %>%
#     mutate(group = sample(rep(0:1, c(28, 72))))
#
#   wmw_result <- wilcox.test(rank_corr ~ group, data = permuted_data)
#   return(wmw_result$statistic)
# })
critical_values <- quantile(W_star, probs = c(0.05 / 7 / 2, 1 - 0.05 / 7 / 2))
ggplot(mapping = aes(x = W_star)) +
geom_histogram(bins = 30) +
geom_vline(xintercept = W_obs, col = "red") +
geom_vline(xintercept = critical_values, col = "blue")
ggplot(mapping = aes(x = W_star)) +
geom_qq() +
geom_qq_line()
help("geom_qq")
ggplot(mapping = aes(sample = W_star)) +
geom_qq() +
geom_qq_line()
install.packages("MKpower")
help(smi.ssize.wilcox.test)
library(MKpower)
help(smi.ssize.wilcox.test)
help(sim.ssize.wilcox.test)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 100, iter = 1000, sig.level = 0.05 / 7)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, iter = 1000, sig.level = 0.05 / 7)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 1, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 4, iter = 1000, sig.level = 0.05 / 7)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 1, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7, mu = 1)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 0.5, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7, mu = 0.5)
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6")
Y <- rank_corr_SME %>% filter(absolute_error_class == ">= 0.6")
ggplot(, mapping = aes(x = X, y = Y)) +
geom_qq() +
geom_qq_line()
help("geom_qq")
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6")
Y <- rank_corr_SME %>% filter(absolute_error_class == ">= 0.6")
ggplot(, mapping = aes(x = Y, y = X)) +
geom_qq() +
geom_qq_line()
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% slice_sample(28)
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% slice_sample(n = 28)
Y <- rank_corr_SME %>% filter(absolute_error_class == ">= 0.6")
ggplot(, mapping = aes(x = X, y = Y)) +
geom_qq() +
geom_qq_line()
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr)
Y <- rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr)
ggplot(, mapping = aes(x = X, y = Y)) +
geom_qq() +
geom_qq_line()
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- as.list(rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr))$rank_corr
Y <- as.list(rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr))$rank_corr
ggplot(, mapping = aes(x = X, y = Y)) +
geom_qq() +
geom_qq_line()
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- as.list(rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr) %>% slice_sample(n = 28))$rank_corr
Y <- as.list(rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr))$rank_corr
ggplot(, mapping = aes(x = X, y = Y)) +
geom_qq() +
geom_qq_line()
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- as.list(rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr))$rank_corr
Y <- as.list(rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr))$rank_corr
qqplot(X, Y)
# Verify location shift
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr)
Y <- rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr)
qqplot(X, Y)
# Verify location shift
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- as.list(rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr))$rank_corr
Y <- as.list(rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr))$rank_corr
qqplot(X, Y)
N_sim <- 1000
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- function(n) rnorm(n, mean = 0, sd = 1)
Y <- function(n) rnorm(n, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X ~ Y)$p_value
}
help("wilcox.test")
N_sim <- 1000
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- function(n) rnorm(n, mean = 0, sd = 1)
Y <- function(n) rnorm(n, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
N_sim <- 1000
N_x <- 72
N_y <- 28
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
N_sim <- 1000
N_x <- 72
N_y <- 28
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05 / 7)
X <- as.vector(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))
X
X <- as.list(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))$rank_corr
ggplot(mapping = aes(sample = X)) +
geom_qq(distribution = Gamma) +
geom_qq_line()
help(qbeta)
X <- as.list(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))$rank_corr
X <- sort(X)
# Theoretical distribution
X0 <- qbeta(ppoints(length(X)), shape1 = 2, shape2 = 1);
plot(x = X0, y = X, xlab = "Theoretical quantiles", ylab = "Observed quantiles");
abline(a = 0, b = 1, col = "red");
X <- as.list(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))$rank_corr
X <- sort(X)
# Theoretical distribution
X0 <- qbeta(ppoints(length(X)), shape1 = 3, shape2 = 1);
plot(x = X0, y = X, xlab = "Theoretical quantiles", ylab = "Observed quantiles");
abline(a = 0, b = 1, col = "red");
X <- as.list(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))$rank_corr
X <- sort(X)
# Theoretical distribution
X0 <- qbeta(ppoints(length(X)), shape1 = 5, shape2 = 1);
plot(x = X0, y = X, xlab = "Theoretical quantiles", ylab = "Observed quantiles");
abline(a = 0, b = 1, col = "red");
X <- as.list(rank_corr_long %>%
filter(attribution_method == "SME_rank_corr") %>%
select(rank_corr))$rank_corr
X <- sort(X)
# Theoretical distribution
X0 <- qbeta(ppoints(length(X)), shape1 = 50, shape2 = 1);
plot(x = X0, y = X, xlab = "Theoretical quantiles", ylab = "Observed quantiles");
abline(a = 0, b = 1, col = "red");
N_sim <- 1000
N_x <- 72
N_y <- 28
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05 / 7)
# Verify location shift
rank_corr_SME <- rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
X <- as.list(rank_corr_SME %>% filter(absolute_error_class == "< 0.6") %>% select(rank_corr))$rank_corr
Y <- as.list(rank_corr_SME %>% filter(absolute_error_class == ">= 0.6") %>% select(rank_corr))$rank_corr
qqplot(X, Y)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 1, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7, mu = 0.5)
N_sim <- 1000
N_x <- 10
N_y <- 10
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05 / 7)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 1, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7, mu = 1)
library(MKpower)
rx <- function(n) rnorm(n, mean = 0, sd = 1)
ry <- function(n) rnorm(n, mean = 1, sd = 1)
## two-sample
sim.ssize.wilcox.test(rx = rx, ry = ry, n.max = 28, step.size = 6, iter = 1000, sig.level = 0.05 / 7, mu = 0)
N_sim <- 10000
N_x <- 10
N_y <- 10
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05 / 7)
N_sim <- 10000
N_x <- 10
N_y <- 10
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05)
N_sim <- 10000
N_x <- 10
N_y <- 10
p_values <- rep(NA, N_sim)
for (i in 1:N_sim) {
X <- rnorm(N_x, mean = 0, sd = 1)
Y <- rnorm(N_y, mean = 1, sd = 1)
p_values[i] <- wilcox.test(X, Y)$p.value
}
mean(p_values <= 0.05 / 5)
wmw_test <- function(attr_method) {
wilcox.test(
rank_corr ~ absolute_error_class,
data = rank_corr_long %>% filter(attribution_method == attr_method),
alpha = 0.05/5
)
}
wmw_sme <- wmw_test("SME_rank_corr")
wmw_shapley <- wmw_test("Shapley_rank_corr")
wmw_hn <- wmw_test("HN_rank_corr")
wmw_sme
wmw_shapley
wmw_hn
rank_corr_long %>% filter(attribution_method == "SME_rank_corr")
table(rank_corr_long %>% filter(attribution_method == "SME_rank_corr") % select(absolute_error_class))
table(rank_corr_long %>% filter(attribution_method == "SME_rank_corr") %>% select(absolute_error_class))
